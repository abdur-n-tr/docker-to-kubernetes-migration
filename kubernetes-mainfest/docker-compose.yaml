version: "3"

networks:
  net:
    # driver: bridge
    external: true
  prism:
    external: false
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 10.2.0.0/24

services:

  ollama:
    image: ollama/ollama:latest
    deploy:
      resources:
        limits:
          cpus: '0.000'
          memory: 20000M
    # pull_policy: always
    networks: [net]
    tty: true
    ports: [11434:11434]
    restart: on-failure
    volumes:
      - /root/workspace/code:/code
      - ./ollama/ollama:/root/.ollama

  llama-webui:
    image: ghcr.io/open-webui/open-webui:main
    depends_on:
      - ollama
    ports: [3000:8080]
    environment:
      - '/ollama/api=http://ollama:11434/api'
    networks: [net]
    volumes:
      - ./ollama/ollama-webui:/app/backend/data
    extra_hosts:
      - host.docker.internal:host-gateway
    restart: on-failure
    labels:
      - traefik.enable=true
      - traefik.http.routers.llama-webui.rule=Host(`gpt.${D1}`)
      - traefik.http.routers.llama-webui.entrypoints=websecure
      - traefik.http.routers.llama-webui.tls.certresolver=leresolver
      - traefik.http.routers.llama-webui.middlewares=ratelimit@file, security-headers@file, geoblock@file

  # authelia:
  #   image: authelia/authelia:4.11.0
  #   command: --config /config/configuration.yml --storage-connector /config/storage-mysql.yml
  #   environment:
  #     - AUTHELIA_JWT_SECRET=mysecretjwtsecret
  #   volumes:
  #     - ./authelia/config:/config
  #     - ./authelia/data:/data
  #   networks:
  #     - net
  #   depends_on:
  #     - authelia-db
  #   ports:
  #     - "9091:9091"
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.authelia.rule=Host(`authelia.${D1}`)
  #     - traefik.http.routers.authelia.entrypoints=websecure
  #     - traefik.http.routers.authelia.tls.certresolver=leresolver
  #     - traefik.http.routers.authelia.middlewares=security-headers@file, error-pages-middleware@docker, ratelimit@file, geoblock@file
  #   healthcheck:
  #     test: ["CMD", "curl", "--fail", "http://localhost:9091/api/health"]
  #     interval: 1m
  #     timeout: 10s
  #     retries: 3
  #     start_period: 10s
  #   restart: on-failure

  # authelia-db:
  #   image: mariadb:10.6
  #   environment:
  #     - MYSQL_DATABASE=authelia
  #     - MYSQL_USER=authelia
  #     - MYSQL_PASSWORD=mysecretpassword
  #     - MYSQL_ROOT_PASSWORD=mysecretrootpassword
  #   volumes:
  #     - ./authelia-db:/var/lib/mysql
  #   networks:
  #     - net
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
  #     interval: 1m
  #     timeout: 10s
  #     retries: 3
  #     start_period: 10s
  #   restart: on-failure

  gitea:
    container_name: gitea
    image: gitea/gitea:1.17.2
    networks: [net]
    environment:
      - USER_UID=1000
      - USER_GID=1000
    volumes:
      - ./gitea/data:/var/lib/gitea
      - ./gitea/config:/etc/gitea
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.gitea.rule=Host(`git.${D1}`)
      - traefik.http.services.gitea.loadbalancer.server.port=3000
      - traefik.http.routers.gitea.entrypoints=websecure
      - traefik.http.routers.gitea.tls.certresolver=leresolver
      - traefik.http.routers.gitea.middlewares=security-headers@file, error-pages-middleware@docker, ratelimit@file, geoblock@file
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:3000/api/v1/status"]
      interval: 30s
      timeout: 10s
      retries: 3

  maintenance:
    container_name: maintenance
    image: wickerlabs/maintenance
    networks: [net]
    environment:
      TEAM_NAME: "HAPPYCLOUDCOMPUTING"
      TITLE: "Oops!"
      MAIL_ADDRESS: "mail@happycloudcomputing.com"
      LINK_COLOR: "#48d1cc"
      THEME: "Light"
      PORT: 8090
      RESPONSE_CODE: "503 Service Unavailable"
      MESSAGE: "Sorry for the inconvenience but we're performing some maintenance at the moment. If you need to you can always {{contact}}, otherwise we'll be back online shortly!"
      CONTACT_LINK: "contact us"
    ports: [8090:8090]

  ide:
    image: ghcr.io/linuxserver/code-server
    container_name: ide
    restart: unless-stopped
    privileged: true
    networks: [net]
    ports: [8443:8443]
    environment:
      - PUID=1000
      - PGID=1000
      - PASSWORD=123456Eg
      - SUDO_PASSWORD=123456Eg
      - DEFAULT_WORKSPACE=/workspace #optional
      - VSCODE_EXTENSION_IDS=hediet.vscode-drawio|prettier-vscode|vscode-python
      - INSTALL_PACKAGES=btop|screen|htop|python-is-python3|apt-transport-https|software-properties-common|gnupg-agent|build-essential
      - INSTALL_PIP_PACKAGES=ib_insync|pandas|numpy|pipx|httpie|textual|matplotlib|prompt_toolkit|pytermgui
      - DOCKER_MODS=linuxserver/mods:universal-package-install|linuxserver/mods:universal-docker-in-docker|linuxserver/mods:code-server-awscli|linuxserver/mods:code-server-zsh|linuxserver/mods:code-server-python3|linuxserver/mods:code-server-nodejs|linuxserver/mods:universal-git|linuxserver/mods:code-server-npmglobal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /root/workspace:/workspace
      - ./ide/config:/config

  ap:
    image: activepieces/activepieces:0.14.3
    container_name: ap
    restart: unless-stopped
    ## Enable the following line if you already use AP_EXECUTION_MODE with SANDBOXED or old activepieces, checking the breaking change documentation for more info.
    ## privileged: true
    # ports: [8088:80]
    depends_on:
      - ap-postgres
      - ap-redis
    environment:
      - AP_ENGINE_EXECUTABLE_PATH=dist/packages/engine/main.js
      - AP_ENVIRONMENT=prod
      # - AP_FRONTEND_URL=http://localhost:8088
      - AP_WEBHOOK_TIMEOUT_SECONDS=30
      - AP_TRIGGER_DEFAULT_POLL_INTERVAL=5
      - AP_POSTGRES_DATABASE=activepieces
      - AP_POSTGRES_HOST=ap-postgres
      - AP_POSTGRES_PORT=5432
      - AP_POSTGRES_USERNAME=activepieces
      - AP_POSTGRES_PASSWORD=activepieces
      - AP_EXECUTION_MODE=UNSANDBOXED
      - AP_REDIS_HOST=ap-redis
      - AP_REDIS_PORT=6379
      - AP_SANDBOX_RUN_TIME_SECONDS=600
      - AP_TELEMETRY_ENABLED=true
      - AP_TEMPLATES_SOURCE_URL="https://cloud.activepieces.com/api/v1/flow-templates"
    networks:
      - net
    labels:
      - traefik.enable=true
      - traefik.http.routers.ap.rule=Host(`ap.${HCC}`)
      - traefik.http.routers.ap.entrypoints=websecure
      - traefik.http.routers.ap.tls.certresolver=leresolver
      - traefik.http.routers.ap.middlewares=ratelimit@file, security-headers@file, error-pages-middleware, geoblock@file #, auth@file
  
  ap-postgres:
    image: "postgres:14.4"
    container_name: ap-postgres
    restart: unless-stopped
    environment:
      - "POSTGRES_DB=activepieces"
      - "POSTGRES_PASSWORD=activepieces"
      - "POSTGRES_USER=activepieces"
    volumes:
      - ./activepieces/postgres_data:/var/lib/postgresql/data
    networks:
      - net

  ap-redis:
    image: "redis:7.0.7"
    container_name: ap-redis
#   restart: unless-stopped
#   volumes:
#     - "./activepieces/redis_data:/data"
#   networks:
#     - net

  etherpad:
    image: etherpad/etherpad:1
    environment:
      - TITLE=NomPad
      - DEFAULT_PAD_TEXT=Le service EtherPad de Nom
      - ADMIN_PASSWORD=${UNIFIED_PASS}
      - ADMIN_USER=${UNIFIED_USER}
      - SESSION_REQUIRED=false
    networks: [net]
    ports: [9001:9001]
    labels:
       - traefik.enable=true
       - traefik.http.routers.etherpad.rule=Host(`pad.${D1}`)
       - traefik.http.routers.etherpad.entrypoints=websecure
       - traefik.http.routers.etherpad.tls.certresolver=leresolver
       - traefik.http.routers.etherpad.middlewares=ratelimit@file, security-headers@file, geoblock@file, auth@docker

  neko:
    container_name: neko
    image: m1k1o/neko:chromium # tor-browser:xfce:chromium
    restart: unless-stopped
    networks: [net]
    # cap_add:
    #   - NET_ADMIN
    #   - SYS_ADMIN
    privileged: true
    shm_size: "2gb"
    ports:
      - 8080:8080
      - 52000-52100:52000-52100/udp
    environment:
      NEKO_SCREEN: 1920x1080@30
      NEKO_PASSWORD: 123456Eg
      NEKO_PASSWORD_ADMIN: Confirmati0n
      NEKO_EPR: 52000-52100
      NEKO_IMPLICIT_CONTROL: "true"
      NEKO_FILE_TRANSFER_ENABLED: "true"
      # NEKO_ICELITE: 1

  ibga:
    image: heshiming/ibga
    container_name: ibga
    networks: [net]
    restart: unless-stopped
    environment:
      - TERM=xterm
      - IB_USERNAME=omega703
      - IB_PASSWORD=123456Eg
      - IB_REGION=America
      - IB_TIMEZONE=America/New York
      - IB_LOGINTAB=IB API
      - IB_LOGINTYPE=Paper Trading
      - IB_LOGOFF=11:55 PM
      - IB_APILOG=data
      - IB_LOGLEVEL=Error
      - IBGA_EXPORT_LOGS=true
      - IBGA_LOG_EXPORT_DIR=/home/ibg_logs
    volumes:
      - ./ibga/program:/home/ibg
      - ./ibga/settings:/home/ibg_settings
      - ./ibga/logs:/home/ibg_logs
    ports:
      - "5800:5800"
      - "4000:4000"

  